options:
  parameters:
    author: Marcus Leech, CCERA.ca
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: deuterium
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: run
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Deuterium Spectral Logger
    window_size: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: custom_window
  id: variable
  parameters:
    comment: ''
    value: sinc*np.hamming(4*fftsize)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 204.0]
    rotation: 0
    state: enabled
- name: fftsize
  id: variable
  parameters:
    comment: ''
    value: '1024'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 140.0]
    rotation: 0
    state: true
- name: lentaps
  id: variable
  parameters:
    comment: ''
    value: len(taps)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [976, 860.0]
    rotation: 0
    state: true
- name: reduction
  id: variable
  parameters:
    comment: ''
    value: int(integrate*(srate/10)/fftsize)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2096, 132.0]
    rotation: 0
    state: true
- name: sinc
  id: variable
  parameters:
    comment: ''
    value: np.sinc(sinc_sample_locations/np.pi)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 140.0]
    rotation: 0
    state: enabled
- name: sinc_sample_locations
  id: variable
  parameters:
    comment: ''
    value: np.arange(-np.pi*4/2.0, np.pi*4/2.0, np.pi/fftsize)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 276.0]
    rotation: 0
    state: enabled
- name: taps
  id: variable
  parameters:
    comment: ''
    value: firdes.low_pass(1.0,srate,srate/21,srate/60)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [800, 860.0]
    rotation: 0
    state: true
- name: Logger
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nA Logger for the IDEA Deuterium project\n\nWe accumulate\
      \ average spectra in two categories\n   o Main -- 97% of the samples go here\n\
      \   o Baseline - 3% of the samples go here\n\nThe idea is that because the D1\
      \ line is soooooo very weak, we can\n  \"baseline\" just using a very small\
      \ amount of the sky data itself, because\n  less than 1 part in 1e6 will contain\
      \ the actual line.\n\nWe log on a daily basis, so baselining is done on a daily\
      \ basis. The resulting\n  baselined spectrum is logged once per day.  In post-processing\
      \ a \"grand\"\n  integration can be done over many many days, and many many\
      \ stations.\n  \n\"\"\"\n\nimport numpy as np\nfrom gnuradio import gr\nimport\
      \ time\nimport random\nimport time\n\n\nclass blk(gr.sync_block):  # other base\
      \ classes are basic_block, decim_block, interp_block\n    \"\"\"A Logger for\
      \ the IDEA Deuterium project \n       - fftsize - size of the FFT used for logging\n\
      \       - outfile - prefix for the output file\n       - loginterval - logging\
      \ interval, hours\n       \"\"\"\n\n    def __init__(self, fftsize=1024,outfile=\"\
      deuterium-\",loginterval=4):  # only default arguments here\n        \"\"\"\
      arguments to this function show up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n\
      \            self,\n            name='Deuterium Logger',   # will show up in\
      \ GRC\n            in_sig=[(np.float32,fftsize)],\n            out_sig=None\n\
      \        )\n        #\n        # Output file prefix here\n        #\n      \
      \  self.outfile = outfile\n        self.loginterval = loginterval\n        #\n\
      \        # Create averaging buffers for both main and baseline\n        #\n\
      \        self.main = np.zeros(fftsize)\n        self.baseline = np.zeros(fftsize)\n\
      \        self.maincount = 0\n        self.basecount = 0\n        \n        #\n\
      \        # Record start time\n        #\n        self.startt = time.time()\n\
      \        \n        #\n        # Seed the random number generator\n        #\n\
      \        random.seed()\n\n    def work(self, input_items, output_items):\n \
      \       \"\"\"Log vector from FFT\"\"\"\n        \n        for v in input_items[0]:\n\
      \t\t\t#\n\t\t\t# With P ~= 0.03, compute a baseline average\n\t\t\t#\n\t\t\t\
      #\n\t\t\t# Else add it to the main average\n\t\t\t#\n            x = random.randint(0,30)\n\
      \            if (x == 1):\n                self.baseline = np.add(self.baseline,v)\n\
      \                self.basecount += 1\n            else:\n                self.main\
      \ = np.add(self.main, v)\n                self.maincount += 1\n            #\n\
      \            # Once a day, compute averages, log\n            #\n          \
      \  if ((time.time() - self.startt) >= (self.loginterval*3600)):\n\t\t\t\t\n\t\
      \t\t\t#\n\t\t\t\t# Determine filename\n\t\t\t\t#\n                ltp = time.gmtime()\n\
      \                fn = self.outfile + \"%04d%02d%02d-%02d\" % (ltp.tm_year,ltp.tm_mon,ltp.tm_mday,\
      \ ltp.tm_hour) + \".csv\"\n                \n                #\n           \
      \     # Open it\n                #\n                fp = open (fn, \"w\")\n\
      \                \n                #\n                # Write the TOD header\n\
      \                # Removed for now to make plotting easier\n               \
      \ #\n                #fp.write (\"%02d,%02d,%02d,\" % (ltp.tm_hour, ltp.tm_min,\
      \ ltp.tm_sec))\n                # \n                \n                #\n  \
      \              # Compute the average of the main buffer\n                #\n\
      \                avgmain = np.divide(self.main,self.maincount)\n           \
      \     \n                #\n                # Compute the average of all samples\
      \ on the input\n                # We'll use that to adjust the baselined version\n\
      \                #\n                avg = sum(avgmain)/len(v)\n            \
      \    \n                #\n                # If there ARE baseline samples\n\
      \                if (self.basecount > 0):\n                    avgbase = np.divide(self.baseline,\
      \ self.basecount)\n                else:\n                    avgbase = self.baseline\n\
      \                    \n                #\n                # Subtract out the\
      \ baseline\n                adjusted = np.subtract(avgmain, avgbase)\n     \
      \           \n                #\n                # Adjust back up to average\
      \ previous level\n                #\n                adjusted = np.add(adjusted,\
      \ avg)\n                \n                #\n                # Reset both averaging\
      \ buffers and counters\n                #\n                self.main = np.zeros(len(v))\n\
      \                self.baseline = np.zeros(len(v))\n                self.maincount\
      \ = 0\n                self.basecount = 0\n                \n              \
      \  #\n                # Write out the (adjusted) values\n                #\n\
      \                i = 0\n                for val in adjusted:\n             \
      \       fp.write (\"%9.5e\" % val)\n                    i += 1\n           \
      \         #\n                    # Don't write a trailing \",\"\n          \
      \          #\n                    if (i < len(v)):\n                       \
      \ fp.write(\",\")\n                fp.write(\"\\n\")\n                fp.close()\n\
      \                \n                #\n                # Reset our logging timer\n\
      \                #\n                self.startt = time.time()\n            \
      \        \n            \n        return len(input_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    fftsize: fftsize
    loginterval: loginterval
    maxoutbuf: '0'
    minoutbuf: '0'
    outfile: prefix
  states:
    _io_cache: ('Deuterium Logger', 'blk', [('fftsize', '1024'), ('outfile', "'deuterium-'"),
      ('loginterval', '4')], [('0', 'float', 1024)], [], 'A Logger for the IDEA Deuterium
      project \n       - fftsize - size of the FFT used for logging\n       - outfile
      - prefix for the output file\n       - loginterval - logging interval, hours\n       ',
      ['loginterval', 'outfile'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1960, 780.0]
    rotation: 0
    state: true
- name: blocks_add_xx_0
  id: blocks_add_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '4'
    type: complex
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1208, 136.0]
    rotation: 0
    state: enabled
- name: blocks_complex_to_mag_squared_0
  id: blocks_complex_to_mag_squared
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1664, 60.0]
    rotation: 0
    state: enabled
- name: blocks_delay_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: fftsize*3
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [432, 524.0]
    rotation: 0
    state: enabled
- name: blocks_delay_0_0
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: fftsize*2
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [400, 332.0]
    rotation: 0
    state: enabled
- name: blocks_delay_0_1
  id: blocks_delay
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    delay: fftsize
    maxoutbuf: '0'
    minoutbuf: '0'
    num_ports: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [384, 212.0]
    rotation: 0
    state: enabled
- name: blocks_integrate_xx_0
  id: blocks_integrate_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: reduction
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1896, 52.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: custom_window[-fftsize:]
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [856, 108.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_0_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: custom_window[2*fftsize:3*fftsize]
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 212.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_0_0_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: custom_window[fftsize:2*fftsize]
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 316.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_vxx_0_0_0_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: custom_window[0:fftsize]
    maxoutbuf: '0'
    minoutbuf: '0'
    type: complex
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [840, 412.0]
    rotation: 0
    state: enabled
- name: blocks_multiply_const_xx_0
  id: blocks_multiply_const_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: 1.0/(reduction)
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: fftsize
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1696, 364.0]
    rotation: 0
    state: true
- name: blocks_stream_to_vector_0
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: fftsize
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [648, 28.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_vector_0_0
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: fftsize
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [584, 316.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_vector_0_1
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: fftsize
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [576, 212.0]
    rotation: 0
    state: enabled
- name: blocks_stream_to_vector_0_2
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: fftsize
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [576, 420.0]
    rotation: 0
    state: enabled
- name: dc_blocker_xx_0
  id: dc_blocker_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    length: fftsize
    long_form: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: cc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [984, 748.0]
    rotation: 0
    state: true
- name: device
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: '"Device string"'
    short_id: ''
    type: str
    value: '"rtl=0"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1128, 564.0]
    rotation: 0
    state: enabled
- name: fft_filter_xxx_0
  id: fft_filter_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decim: '10'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    samp_delay: '0'
    taps: taps
    type: ccf
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [808, 740.0]
    rotation: 0
    state: true
- name: fft_vxx_0
  id: fft_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    fft_size: fftsize
    forward: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    nthreads: '1'
    shift: 'True'
    type: complex
    window: window.blackmanharris(fftsize)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1400, 44.0]
    rotation: 0
    state: enabled
- name: frequency
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: '"Center Frequency (Hz)"'
    short_id: ''
    type: eng_float
    value: 327.4e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1256, 564.0]
    rotation: 0
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import numpy as np
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [208, 20.0]
    rotation: 0
    state: enabled
- name: integrate
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: '"Integration time(seconds)"'
    short_id: ''
    type: eng_float
    value: '30'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [664, 564.0]
    rotation: 0
    state: enabled
- name: loginterval
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: '"Log Interval (Hours)"'
    short_id: ''
    type: intx
    value: '6'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [656, 660.0]
    rotation: 0
    state: enabled
- name: note_0
  id: note
  parameters:
    alias: ''
    comment: 'Filter down to srate/10

      Also insert DC-blocker

      to deal with residual DC offset'
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [648, 852.0]
    rotation: 0
    state: true
- name: note_1
  id: note
  parameters:
    alias: ''
    comment: 'WOLA spectrometer

      implementation'
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [664, 92.0]
    rotation: 0
    state: true
- name: note_2
  id: note
  parameters:
    alias: ''
    comment: Logging
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1864, 708.0]
    rotation: 0
    state: true
- name: note_3
  id: note
  parameters:
    alias: ''
    comment: Scaling to reduce the integrator output
    note: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1736, 460.0]
    rotation: 0
    state: true
- name: osmosdr_source_0
  id: osmosdr_source
  parameters:
    affinity: ''
    alias: ''
    ant0: ''
    ant1: ''
    ant10: ''
    ant11: ''
    ant12: ''
    ant13: ''
    ant14: ''
    ant15: ''
    ant16: ''
    ant17: ''
    ant18: ''
    ant19: ''
    ant2: ''
    ant20: ''
    ant21: ''
    ant22: ''
    ant23: ''
    ant24: ''
    ant25: ''
    ant26: ''
    ant27: ''
    ant28: ''
    ant29: ''
    ant3: ''
    ant30: ''
    ant31: ''
    ant4: ''
    ant5: ''
    ant6: ''
    ant7: ''
    ant8: ''
    ant9: ''
    args: device
    bb_gain0: '25'
    bb_gain1: '20'
    bb_gain10: '20'
    bb_gain11: '20'
    bb_gain12: '20'
    bb_gain13: '20'
    bb_gain14: '20'
    bb_gain15: '20'
    bb_gain16: '20'
    bb_gain17: '20'
    bb_gain18: '20'
    bb_gain19: '20'
    bb_gain2: '20'
    bb_gain20: '20'
    bb_gain21: '20'
    bb_gain22: '20'
    bb_gain23: '20'
    bb_gain24: '20'
    bb_gain25: '20'
    bb_gain26: '20'
    bb_gain27: '20'
    bb_gain28: '20'
    bb_gain29: '20'
    bb_gain3: '20'
    bb_gain30: '20'
    bb_gain31: '20'
    bb_gain4: '20'
    bb_gain5: '20'
    bb_gain6: '20'
    bb_gain7: '20'
    bb_gain8: '20'
    bb_gain9: '20'
    bw0: srate*0.85
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    corr0: '0'
    corr1: '0'
    corr10: '0'
    corr11: '0'
    corr12: '0'
    corr13: '0'
    corr14: '0'
    corr15: '0'
    corr16: '0'
    corr17: '0'
    corr18: '0'
    corr19: '0'
    corr2: '0'
    corr20: '0'
    corr21: '0'
    corr22: '0'
    corr23: '0'
    corr24: '0'
    corr25: '0'
    corr26: '0'
    corr27: '0'
    corr28: '0'
    corr29: '0'
    corr3: '0'
    corr30: '0'
    corr31: '0'
    corr4: '0'
    corr5: '0'
    corr6: '0'
    corr7: '0'
    corr8: '0'
    corr9: '0'
    dc_offset_mode0: '0'
    dc_offset_mode1: '0'
    dc_offset_mode10: '0'
    dc_offset_mode11: '0'
    dc_offset_mode12: '0'
    dc_offset_mode13: '0'
    dc_offset_mode14: '0'
    dc_offset_mode15: '0'
    dc_offset_mode16: '0'
    dc_offset_mode17: '0'
    dc_offset_mode18: '0'
    dc_offset_mode19: '0'
    dc_offset_mode2: '0'
    dc_offset_mode20: '0'
    dc_offset_mode21: '0'
    dc_offset_mode22: '0'
    dc_offset_mode23: '0'
    dc_offset_mode24: '0'
    dc_offset_mode25: '0'
    dc_offset_mode26: '0'
    dc_offset_mode27: '0'
    dc_offset_mode28: '0'
    dc_offset_mode29: '0'
    dc_offset_mode3: '0'
    dc_offset_mode30: '0'
    dc_offset_mode31: '0'
    dc_offset_mode4: '0'
    dc_offset_mode5: '0'
    dc_offset_mode6: '0'
    dc_offset_mode7: '0'
    dc_offset_mode8: '0'
    dc_offset_mode9: '0'
    freq0: frequency
    freq1: 100e6
    freq10: 100e6
    freq11: 100e6
    freq12: 100e6
    freq13: 100e6
    freq14: 100e6
    freq15: 100e6
    freq16: 100e6
    freq17: 100e6
    freq18: 100e6
    freq19: 100e6
    freq2: 100e6
    freq20: 100e6
    freq21: 100e6
    freq22: 100e6
    freq23: 100e6
    freq24: 100e6
    freq25: 100e6
    freq26: 100e6
    freq27: 100e6
    freq28: 100e6
    freq29: 100e6
    freq3: 100e6
    freq30: 100e6
    freq31: 100e6
    freq4: 100e6
    freq5: 100e6
    freq6: 100e6
    freq7: 100e6
    freq8: 100e6
    freq9: 100e6
    gain0: rfgain
    gain1: '10'
    gain10: '10'
    gain11: '10'
    gain12: '10'
    gain13: '10'
    gain14: '10'
    gain15: '10'
    gain16: '10'
    gain17: '10'
    gain18: '10'
    gain19: '10'
    gain2: '10'
    gain20: '10'
    gain21: '10'
    gain22: '10'
    gain23: '10'
    gain24: '10'
    gain25: '10'
    gain26: '10'
    gain27: '10'
    gain28: '10'
    gain29: '10'
    gain3: '10'
    gain30: '10'
    gain31: '10'
    gain4: '10'
    gain5: '10'
    gain6: '10'
    gain7: '10'
    gain8: '10'
    gain9: '10'
    gain_mode0: 'False'
    gain_mode1: 'False'
    gain_mode10: 'False'
    gain_mode11: 'False'
    gain_mode12: 'False'
    gain_mode13: 'False'
    gain_mode14: 'False'
    gain_mode15: 'False'
    gain_mode16: 'False'
    gain_mode17: 'False'
    gain_mode18: 'False'
    gain_mode19: 'False'
    gain_mode2: 'False'
    gain_mode20: 'False'
    gain_mode21: 'False'
    gain_mode22: 'False'
    gain_mode23: 'False'
    gain_mode24: 'False'
    gain_mode25: 'False'
    gain_mode26: 'False'
    gain_mode27: 'False'
    gain_mode28: 'False'
    gain_mode29: 'False'
    gain_mode3: 'False'
    gain_mode30: 'False'
    gain_mode31: 'False'
    gain_mode4: 'False'
    gain_mode5: 'False'
    gain_mode6: 'False'
    gain_mode7: 'False'
    gain_mode8: 'False'
    gain_mode9: 'False'
    if_gain0: '25'
    if_gain1: '20'
    if_gain10: '20'
    if_gain11: '20'
    if_gain12: '20'
    if_gain13: '20'
    if_gain14: '20'
    if_gain15: '20'
    if_gain16: '20'
    if_gain17: '20'
    if_gain18: '20'
    if_gain19: '20'
    if_gain2: '20'
    if_gain20: '20'
    if_gain21: '20'
    if_gain22: '20'
    if_gain23: '20'
    if_gain24: '20'
    if_gain25: '20'
    if_gain26: '20'
    if_gain27: '20'
    if_gain28: '20'
    if_gain29: '20'
    if_gain3: '20'
    if_gain30: '20'
    if_gain31: '20'
    if_gain4: '20'
    if_gain5: '20'
    if_gain6: '20'
    if_gain7: '20'
    if_gain8: '20'
    if_gain9: '20'
    iq_balance_mode0: '0'
    iq_balance_mode1: '0'
    iq_balance_mode10: '0'
    iq_balance_mode11: '0'
    iq_balance_mode12: '0'
    iq_balance_mode13: '0'
    iq_balance_mode14: '0'
    iq_balance_mode15: '0'
    iq_balance_mode16: '0'
    iq_balance_mode17: '0'
    iq_balance_mode18: '0'
    iq_balance_mode19: '0'
    iq_balance_mode2: '0'
    iq_balance_mode20: '0'
    iq_balance_mode21: '0'
    iq_balance_mode22: '0'
    iq_balance_mode23: '0'
    iq_balance_mode24: '0'
    iq_balance_mode25: '0'
    iq_balance_mode26: '0'
    iq_balance_mode27: '0'
    iq_balance_mode28: '0'
    iq_balance_mode29: '0'
    iq_balance_mode3: '0'
    iq_balance_mode30: '0'
    iq_balance_mode31: '0'
    iq_balance_mode4: '0'
    iq_balance_mode5: '0'
    iq_balance_mode6: '0'
    iq_balance_mode7: '0'
    iq_balance_mode8: '0'
    iq_balance_mode9: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    sample_rate: srate
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 668.0]
    rotation: 0
    state: enabled
- name: prefix
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: '"Output files prefix"'
    short_id: ''
    type: str
    value: '"./deuterium-"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1440, 564.0]
    rotation: 0
    state: enabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '0.05'
    axislabels: 'True'
    bw: srate/10
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: frequency
    fftsize: '2048'
    freqhalf: 'True'
    grid: 'True'
    gui_hint: ''
    label: Relative power(dB)
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '2'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: firdes.WIN_BLACKMAN_hARRIS
    ymax: '-20'
    ymin: '-120'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1256, 824.0]
    rotation: 0
    state: true
- name: rfgain
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: '"RF Gain (dB)"'
    short_id: ''
    type: eng_float
    value: '50'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1000, 564.0]
    rotation: 0
    state: enabled
- name: srate
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: '"Sample Rate (SPS)"'
    short_id: ''
    type: eng_float
    value: 2.56e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [848, 564.0]
    rotation: 0
    state: enabled
- name: virtual_sink_1
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: scaled_fft
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1960, 372.0]
    rotation: 0
    state: true
- name: virtual_sink_2
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: integrated_fft
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [2096, 60.0]
    rotation: 0
    state: true
- name: virtual_sink_3
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: filtered_rf0
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1264, 748.0]
    rotation: 0
    state: true
- name: virtual_source_1
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: scaled_fft
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1728, 788.0]
    rotation: 0
    state: true
- name: virtual_source_1_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: integrated_fft
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1456, 372.0]
    rotation: 0
    state: true
- name: virtual_source_2
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: filtered_rf0
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [352, 36.0]
    rotation: 0
    state: true

connections:
- [blocks_add_xx_0, '0', fft_vxx_0, '0']
- [blocks_complex_to_mag_squared_0, '0', blocks_integrate_xx_0, '0']
- [blocks_delay_0, '0', blocks_stream_to_vector_0_2, '0']
- [blocks_delay_0_0, '0', blocks_stream_to_vector_0_0, '0']
- [blocks_delay_0_1, '0', blocks_stream_to_vector_0_1, '0']
- [blocks_integrate_xx_0, '0', virtual_sink_2, '0']
- [blocks_multiply_const_vxx_0, '0', blocks_add_xx_0, '0']
- [blocks_multiply_const_vxx_0_0, '0', blocks_add_xx_0, '1']
- [blocks_multiply_const_vxx_0_0_0, '0', blocks_add_xx_0, '2']
- [blocks_multiply_const_vxx_0_0_0_0, '0', blocks_add_xx_0, '3']
- [blocks_multiply_const_xx_0, '0', virtual_sink_1, '0']
- [blocks_stream_to_vector_0, '0', blocks_multiply_const_vxx_0, '0']
- [blocks_stream_to_vector_0_0, '0', blocks_multiply_const_vxx_0_0_0, '0']
- [blocks_stream_to_vector_0_1, '0', blocks_multiply_const_vxx_0_0, '0']
- [blocks_stream_to_vector_0_2, '0', blocks_multiply_const_vxx_0_0_0_0, '0']
- [dc_blocker_xx_0, '0', qtgui_freq_sink_x_0, '0']
- [dc_blocker_xx_0, '0', virtual_sink_3, '0']
- [fft_filter_xxx_0, '0', dc_blocker_xx_0, '0']
- [fft_vxx_0, '0', blocks_complex_to_mag_squared_0, '0']
- [osmosdr_source_0, '0', fft_filter_xxx_0, '0']
- [virtual_source_1, '0', Logger, '0']
- [virtual_source_1_0, '0', blocks_multiply_const_xx_0, '0']
- [virtual_source_2, '0', blocks_delay_0, '0']
- [virtual_source_2, '0', blocks_delay_0_0, '0']
- [virtual_source_2, '0', blocks_delay_0_1, '0']
- [virtual_source_2, '0', blocks_stream_to_vector_0, '0']

metadata:
  file_format: 1
